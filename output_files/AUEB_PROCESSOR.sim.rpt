Simulator report for AUEB_PROCESSOR
Tue Apr 12 20:38:45 2022
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 280.0 ns     ;
; Simulation Netlist Size     ; 339 nodes    ;
; Simulation Coverage         ;      34.67 % ;
; Total Number of Transitions ; 848          ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
; Device                      ; EP2C35F672C6 ;
+-----------------------------+--------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                                              ;
+--------------------------------------------------------------------------------------------+----------------------------------------------------+---------------+
; Option                                                                                     ; Setting                                            ; Default Value ;
+--------------------------------------------------------------------------------------------+----------------------------------------------------+---------------+
; Simulation mode                                                                            ; Timing                                             ; Timing        ;
; Start time                                                                                 ; 0 ns                                               ; 0 ns          ;
; Simulation results format                                                                  ; VWF                                                ;               ;
; Vector input source                                                                        ; /home/niemand/altera/aueb_processor/Final_Test.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                                 ; On            ;
; Check outputs                                                                              ; Off                                                ; Off           ;
; Report simulation coverage                                                                 ; On                                                 ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                                 ; On            ;
; Display missing 1-value coverage report                                                    ; On                                                 ; On            ;
; Display missing 0-value coverage report                                                    ; On                                                 ; On            ;
; Detect setup and hold time violations                                                      ; Off                                                ; Off           ;
; Detect glitches                                                                            ; Off                                                ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                                                ; Off           ;
; Generate Signal Activity File                                                              ; Off                                                ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                                                ; Off           ;
; Group bus channels in simulation results                                                   ; Off                                                ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                                 ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                                         ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                                                ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                                                ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                                               ; Auto          ;
+--------------------------------------------------------------------------------------------+----------------------------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II 64-Bit to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      34.67 % ;
; Total nodes checked                                 ; 339          ;
; Total output ports checked                          ; 323          ;
; Total output ports with complete 1/0-value coverage ; 112          ;
; Total output ports with no 1/0-value coverage       ; 103          ;
; Total output ports with no 1-value coverage         ; 173          ;
; Total output ports with no 0-value coverage         ; 141          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                              ;
+-----------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                 ; Output Port Name                                                                                          ; Output Port Type ;
+-----------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+------------------+
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~0      ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~0      ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~2      ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~2      ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~3      ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~3      ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:1:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:1:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:1:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:1:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA161|XOR_gate:FAO1|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA161|XOR_gate:FAO1|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:1:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:1:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA161|OR_gate:FAO4|out1                  ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA161|OR_gate:FAO4|out1                  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:2:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:2:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:2:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:2:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:2:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:2:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:2:AND160|out1~2  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:2:AND160|out1~2  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|XOR_gate:FAO0|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|XOR_gate:FAO0|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|XOR_gate:FAO1|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|XOR_gate:FAO1|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:3:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:3:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:4:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:4:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|AND_gate:FAO2|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|AND_gate:FAO2|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA164|XOR_gate:FAO1|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA164|XOR_gate:FAO1|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:4:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:4:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA164|OR_gate:FAO4|out1                  ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA164|OR_gate:FAO4|out1                  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:5:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:5:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~2  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~2  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:6:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:6:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:6:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:6:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:6:AND160|out1~2  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:6:AND160|out1~2  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA166|OR_gate:FAO4|out1~0                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA166|OR_gate:FAO4|out1~0                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA166|OR_gate:FAO4|out1~1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA166|OR_gate:FAO4|out1~1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:7:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:7:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~2  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~2  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|XOR_gate:FAO0|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|XOR_gate:FAO0|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|XOR_gate:FAO1|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|XOR_gate:FAO1|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:8:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:8:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:9:OR160|out1~0                    ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:9:OR160|out1~0                    ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|AND_gate:FAO2|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|AND_gate:FAO2|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA169|XOR_gate:FAO1|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA169|XOR_gate:FAO1|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:9:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:9:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA169|OR_gate:FAO4|out1                  ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA169|OR_gate:FAO4|out1                  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:10:OR160|out1~0                   ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:10:OR160|out1~0                   ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~0 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~0 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~2 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~2 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|XOR_gate:FAO0|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|XOR_gate:FAO0|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|XOR_gate:FAO1|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|XOR_gate:FAO1|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:11:AND160|out1~1 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:11:AND160|out1~1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~1 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~2 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~2 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:12:OR160|out1~0                   ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:12:OR160|out1~0                   ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|AND_gate:FAO2|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|AND_gate:FAO2|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1612|XOR_gate:FAO1|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1612|XOR_gate:FAO1|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~3 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~3 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1612|OR_gate:FAO4|out1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1612|OR_gate:FAO4|out1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:13:OR160|out1~0                   ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:13:OR160|out1~0                   ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1613|XOR_gate:FAO0|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1613|XOR_gate:FAO0|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:13:AND160|out1~1 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:13:AND160|out1~1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|XOR_gate:FAO0|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|XOR_gate:FAO0|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|XOR_gate:FAO1|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|XOR_gate:FAO1|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:15:OR160|out1~0                   ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_1bit:A1|OR_16bit:M13|OR_gate:\or_loop:15:OR160|out1~0                   ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|AND_gate:FAO2|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|AND_gate:FAO2|out1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1615|XOR_gate:FAO1|out1                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1615|XOR_gate:FAO1|out1                ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~2          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~2          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~2          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~2          ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:14:AND160|out1~3 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:14:AND160|out1~3 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:15:AND160|out1~3 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:15:AND160|out1~3 ; combout          ;
; |AUEB_PROCESSOR|aluout[0]                                                                                 ; |AUEB_PROCESSOR|aluout[0]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[1]                                                                                 ; |AUEB_PROCESSOR|aluout[1]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[2]                                                                                 ; |AUEB_PROCESSOR|aluout[2]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[3]                                                                                 ; |AUEB_PROCESSOR|aluout[3]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[4]                                                                                 ; |AUEB_PROCESSOR|aluout[4]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[5]                                                                                 ; |AUEB_PROCESSOR|aluout[5]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[6]                                                                                 ; |AUEB_PROCESSOR|aluout[6]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[7]                                                                                 ; |AUEB_PROCESSOR|aluout[7]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[8]                                                                                 ; |AUEB_PROCESSOR|aluout[8]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[9]                                                                                 ; |AUEB_PROCESSOR|aluout[9]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|aluout[10]                                                                                ; |AUEB_PROCESSOR|aluout[10]                                                                                ; padio            ;
; |AUEB_PROCESSOR|aluout[11]                                                                                ; |AUEB_PROCESSOR|aluout[11]                                                                                ; padio            ;
; |AUEB_PROCESSOR|aluout[12]                                                                                ; |AUEB_PROCESSOR|aluout[12]                                                                                ; padio            ;
; |AUEB_PROCESSOR|aluout[13]                                                                                ; |AUEB_PROCESSOR|aluout[13]                                                                                ; padio            ;
; |AUEB_PROCESSOR|aluout[14]                                                                                ; |AUEB_PROCESSOR|aluout[14]                                                                                ; padio            ;
; |AUEB_PROCESSOR|aluout[15]                                                                                ; |AUEB_PROCESSOR|aluout[15]                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[0]                                                                                 ; |AUEB_PROCESSOR|output[0]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|output[1]                                                                                 ; |AUEB_PROCESSOR|output[1]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|output[2]                                                                                 ; |AUEB_PROCESSOR|output[2]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|output[3]                                                                                 ; |AUEB_PROCESSOR|output[3]                                                                                 ; padio            ;
; |AUEB_PROCESSOR|operation[0]                                                                              ; |AUEB_PROCESSOR|operation[0]~corein                                                                       ; combout          ;
; |AUEB_PROCESSOR|operation[1]                                                                              ; |AUEB_PROCESSOR|operation[1]~corein                                                                       ; combout          ;
; |AUEB_PROCESSOR|clock                                                                                     ; |AUEB_PROCESSOR|clock~corein                                                                              ; combout          ;
; |AUEB_PROCESSOR|clock~clkctrl                                                                             ; |AUEB_PROCESSOR|clock~clkctrl                                                                             ; outclk           ;
+-----------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                                                                               ;
+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                                ; Output Port Name                                                                                                         ; Output Port Type ;
+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------+------------------+
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~1                     ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|OR_16bit:M13|OR_gate:\or_loop:0:OR160|out1~1                     ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:3:AND160|out1~0                 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:3:AND160|out1~0                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA162|AND_gate:FAO2|out1  ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA162|AND_gate:FAO2|out1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:4:AND160|out1~0                 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:4:AND160|out1~0                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|AND_gate:FAO3|out1                                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA163|AND_gate:FAO3|out1                                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA163|AND_gate:FAO2|out1  ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA163|AND_gate:FAO2|out1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA165|AND_gate:FAO2|out1  ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA165|AND_gate:FAO2|out1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~1                 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~1                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:8:AND160|out1~0                 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:8:AND160|out1~0                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA167|AND_gate:FAO2|out1  ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA167|AND_gate:FAO2|out1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:9:AND160|out1~0                 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:9:AND160|out1~0                 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA168|AND_gate:FAO2|out1  ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA168|AND_gate:FAO2|out1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|AND_gate:FAO3|out1                                ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA168|AND_gate:FAO3|out1                                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~1                ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~1                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:11:AND160|out1~0                ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:11:AND160|out1~0                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA1610|AND_gate:FAO2|out1 ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA1610|AND_gate:FAO2|out1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~0                ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:12:AND160|out1~0                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA1611|AND_gate:FAO2|out1 ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA1611|AND_gate:FAO2|out1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|AND_gate:FAO3|out1                               ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1611|AND_gate:FAO3|out1                               ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:13:AND160|out1~0                ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:13:AND160|out1~0                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:14:AND160|out1~2                ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:14:AND160|out1~2                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA1613|AND_gate:FAO2|out1 ; |AUEB_PROCESSOR|ALU_16bit:P2|COMPLEMENT_GETTER_16bit:A0|FULL_ADDER_16bit:CG161|FULL_ADDER_1bit:FA1613|AND_gate:FAO2|out1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:15:AND160|out1~2                ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:15:AND160|out1~2                ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|AND_gate:FAO3|out1                               ; |AUEB_PROCESSOR|ALU_16bit:P2|FULL_ADDER_16bit:A2|FULL_ADDER_1bit:FA1614|AND_gate:FAO3|out1                               ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                          ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; |AUEB_PROCESSOR|reg:P3|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1                         ; combout          ;
; |AUEB_PROCESSOR|out1[1]                                                                                                  ; |AUEB_PROCESSOR|out1[1]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[3]                                                                                                  ; |AUEB_PROCESSOR|out1[3]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[4]                                                                                                  ; |AUEB_PROCESSOR|out1[4]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[5]                                                                                                  ; |AUEB_PROCESSOR|out1[5]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[6]                                                                                                  ; |AUEB_PROCESSOR|out1[6]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[7]                                                                                                  ; |AUEB_PROCESSOR|out1[7]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[8]                                                                                                  ; |AUEB_PROCESSOR|out1[8]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[9]                                                                                                  ; |AUEB_PROCESSOR|out1[9]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out1[10]                                                                                                 ; |AUEB_PROCESSOR|out1[10]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out1[11]                                                                                                 ; |AUEB_PROCESSOR|out1[11]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out1[12]                                                                                                 ; |AUEB_PROCESSOR|out1[12]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out1[13]                                                                                                 ; |AUEB_PROCESSOR|out1[13]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out1[14]                                                                                                 ; |AUEB_PROCESSOR|out1[14]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out1[15]                                                                                                 ; |AUEB_PROCESSOR|out1[15]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out2[2]                                                                                                  ; |AUEB_PROCESSOR|out2[2]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[3]                                                                                                  ; |AUEB_PROCESSOR|out2[3]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[4]                                                                                                  ; |AUEB_PROCESSOR|out2[4]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[5]                                                                                                  ; |AUEB_PROCESSOR|out2[5]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[6]                                                                                                  ; |AUEB_PROCESSOR|out2[6]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[7]                                                                                                  ; |AUEB_PROCESSOR|out2[7]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[8]                                                                                                  ; |AUEB_PROCESSOR|out2[8]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[9]                                                                                                  ; |AUEB_PROCESSOR|out2[9]                                                                                                  ; padio            ;
; |AUEB_PROCESSOR|out2[10]                                                                                                 ; |AUEB_PROCESSOR|out2[10]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out2[11]                                                                                                 ; |AUEB_PROCESSOR|out2[11]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out2[12]                                                                                                 ; |AUEB_PROCESSOR|out2[12]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out2[13]                                                                                                 ; |AUEB_PROCESSOR|out2[13]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out2[14]                                                                                                 ; |AUEB_PROCESSOR|out2[14]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|out2[15]                                                                                                 ; |AUEB_PROCESSOR|out2[15]                                                                                                 ; padio            ;
; |AUEB_PROCESSOR|output[4]                                                                                                ; |AUEB_PROCESSOR|output[4]                                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[5]                                                                                                ; |AUEB_PROCESSOR|output[5]                                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[6]                                                                                                ; |AUEB_PROCESSOR|output[6]                                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[7]                                                                                                ; |AUEB_PROCESSOR|output[7]                                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[8]                                                                                                ; |AUEB_PROCESSOR|output[8]                                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[9]                                                                                                ; |AUEB_PROCESSOR|output[9]                                                                                                ; padio            ;
; |AUEB_PROCESSOR|output[10]                                                                                               ; |AUEB_PROCESSOR|output[10]                                                                                               ; padio            ;
; |AUEB_PROCESSOR|output[11]                                                                                               ; |AUEB_PROCESSOR|output[11]                                                                                               ; padio            ;
; |AUEB_PROCESSOR|output[12]                                                                                               ; |AUEB_PROCESSOR|output[12]                                                                                               ; padio            ;
; |AUEB_PROCESSOR|output[13]                                                                                               ; |AUEB_PROCESSOR|output[13]                                                                                               ; padio            ;
; |AUEB_PROCESSOR|output[14]                                                                                               ; |AUEB_PROCESSOR|output[14]                                                                                               ; padio            ;
; |AUEB_PROCESSOR|output[15]                                                                                               ; |AUEB_PROCESSOR|output[15]                                                                                               ; padio            ;
; |AUEB_PROCESSOR|in1[0]                                                                                                   ; |AUEB_PROCESSOR|in1[0]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[1]                                                                                                   ; |AUEB_PROCESSOR|in1[1]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[2]                                                                                                   ; |AUEB_PROCESSOR|in1[2]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[3]                                                                                                   ; |AUEB_PROCESSOR|in1[3]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[4]                                                                                                   ; |AUEB_PROCESSOR|in1[4]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[5]                                                                                                   ; |AUEB_PROCESSOR|in1[5]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[6]                                                                                                   ; |AUEB_PROCESSOR|in1[6]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[7]                                                                                                   ; |AUEB_PROCESSOR|in1[7]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[8]                                                                                                   ; |AUEB_PROCESSOR|in1[8]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[9]                                                                                                   ; |AUEB_PROCESSOR|in1[9]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[10]                                                                                                  ; |AUEB_PROCESSOR|in1[10]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in1[11]                                                                                                  ; |AUEB_PROCESSOR|in1[11]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in1[12]                                                                                                  ; |AUEB_PROCESSOR|in1[12]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in1[13]                                                                                                  ; |AUEB_PROCESSOR|in1[13]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in1[14]                                                                                                  ; |AUEB_PROCESSOR|in1[14]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in1[15]                                                                                                  ; |AUEB_PROCESSOR|in1[15]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in2[0]                                                                                                   ; |AUEB_PROCESSOR|in2[0]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[1]                                                                                                   ; |AUEB_PROCESSOR|in2[1]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[2]                                                                                                   ; |AUEB_PROCESSOR|in2[2]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[3]                                                                                                   ; |AUEB_PROCESSOR|in2[3]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[4]                                                                                                   ; |AUEB_PROCESSOR|in2[4]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[5]                                                                                                   ; |AUEB_PROCESSOR|in2[5]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[6]                                                                                                   ; |AUEB_PROCESSOR|in2[6]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[7]                                                                                                   ; |AUEB_PROCESSOR|in2[7]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[8]                                                                                                   ; |AUEB_PROCESSOR|in2[8]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[9]                                                                                                   ; |AUEB_PROCESSOR|in2[9]~corein                                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[10]                                                                                                  ; |AUEB_PROCESSOR|in2[10]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in2[11]                                                                                                  ; |AUEB_PROCESSOR|in2[11]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in2[12]                                                                                                  ; |AUEB_PROCESSOR|in2[12]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in2[13]                                                                                                  ; |AUEB_PROCESSOR|in2[13]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in2[14]                                                                                                  ; |AUEB_PROCESSOR|in2[14]~corein                                                                                           ; combout          ;
; |AUEB_PROCESSOR|in2[15]                                                                                                  ; |AUEB_PROCESSOR|in2[15]~corein                                                                                           ; combout          ;
+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                                                 ;
+-----------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                 ; Output Port Name                                                                                          ; Output Port Type ;
+-----------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+------------------+
; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~0                               ; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~0                               ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~1                               ; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~1                               ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~2                               ; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~2                               ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~3                               ; |AUEB_PROCESSOR|ALU_16bit:P2|NOT_16bit:A6|OR_gate:\nor_loop:3:NOT162|out1~3                               ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:3:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:3:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:4:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:4:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:5:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:6:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:6:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~1  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:7:AND160|out1~1  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:8:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:8:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:9:AND160|out1~0  ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:9:AND160|out1~0  ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~1 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:10:AND160|out1~1 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:11:AND160|out1~0 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:11:AND160|out1~0 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:13:AND160|out1~0 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:13:AND160|out1~0 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:14:AND160|out1~2 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:14:AND160|out1~2 ; combout          ;
; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:15:AND160|out1~2 ; |AUEB_PROCESSOR|ALU_16bit:P2|MULT_3bit:A7|MULT_1bit:M36|AND_16bit:M11|AND_gate:\and_loop:15:AND160|out1~2 ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF14|AND_gate:SR0|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P0|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:0:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:1:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:2:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:3:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:4:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:5:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:6:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:7:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:8:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:9:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1           ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:10:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:11:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:12:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:13:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:14:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF13|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; |AUEB_PROCESSOR|reg:P1|FLIP_FLOP_1bit:\flip_flops_loop:15:REG0|SR_LATCH:FF11|AND_gate:SR2|out1~1          ; combout          ;
; |AUEB_PROCESSOR|out1[0]                                                                                   ; |AUEB_PROCESSOR|out1[0]                                                                                   ; padio            ;
; |AUEB_PROCESSOR|out1[2]                                                                                   ; |AUEB_PROCESSOR|out1[2]                                                                                   ; padio            ;
; |AUEB_PROCESSOR|out2[0]                                                                                   ; |AUEB_PROCESSOR|out2[0]                                                                                   ; padio            ;
; |AUEB_PROCESSOR|out2[1]                                                                                   ; |AUEB_PROCESSOR|out2[1]                                                                                   ; padio            ;
; |AUEB_PROCESSOR|operation[2]                                                                              ; |AUEB_PROCESSOR|operation[2]~corein                                                                       ; combout          ;
; |AUEB_PROCESSOR|in1[0]                                                                                    ; |AUEB_PROCESSOR|in1[0]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[1]                                                                                    ; |AUEB_PROCESSOR|in1[1]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[2]                                                                                    ; |AUEB_PROCESSOR|in1[2]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[3]                                                                                    ; |AUEB_PROCESSOR|in1[3]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[4]                                                                                    ; |AUEB_PROCESSOR|in1[4]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[5]                                                                                    ; |AUEB_PROCESSOR|in1[5]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[6]                                                                                    ; |AUEB_PROCESSOR|in1[6]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[7]                                                                                    ; |AUEB_PROCESSOR|in1[7]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[8]                                                                                    ; |AUEB_PROCESSOR|in1[8]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[9]                                                                                    ; |AUEB_PROCESSOR|in1[9]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in1[10]                                                                                   ; |AUEB_PROCESSOR|in1[10]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[11]                                                                                   ; |AUEB_PROCESSOR|in1[11]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[12]                                                                                   ; |AUEB_PROCESSOR|in1[12]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[13]                                                                                   ; |AUEB_PROCESSOR|in1[13]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[14]                                                                                   ; |AUEB_PROCESSOR|in1[14]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in1[15]                                                                                   ; |AUEB_PROCESSOR|in1[15]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[0]                                                                                    ; |AUEB_PROCESSOR|in2[0]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[1]                                                                                    ; |AUEB_PROCESSOR|in2[1]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[2]                                                                                    ; |AUEB_PROCESSOR|in2[2]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[3]                                                                                    ; |AUEB_PROCESSOR|in2[3]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[4]                                                                                    ; |AUEB_PROCESSOR|in2[4]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[5]                                                                                    ; |AUEB_PROCESSOR|in2[5]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[6]                                                                                    ; |AUEB_PROCESSOR|in2[6]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[7]                                                                                    ; |AUEB_PROCESSOR|in2[7]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[8]                                                                                    ; |AUEB_PROCESSOR|in2[8]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[9]                                                                                    ; |AUEB_PROCESSOR|in2[9]~corein                                                                             ; combout          ;
; |AUEB_PROCESSOR|in2[10]                                                                                   ; |AUEB_PROCESSOR|in2[10]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[11]                                                                                   ; |AUEB_PROCESSOR|in2[11]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[12]                                                                                   ; |AUEB_PROCESSOR|in2[12]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[13]                                                                                   ; |AUEB_PROCESSOR|in2[13]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[14]                                                                                   ; |AUEB_PROCESSOR|in2[14]~corein                                                                            ; combout          ;
; |AUEB_PROCESSOR|in2[15]                                                                                   ; |AUEB_PROCESSOR|in2[15]~corein                                                                            ; combout          ;
+-----------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit Simulator
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Apr 12 20:38:44 2022
Info: Command: quartus_sim --simulation_results_format=VWF AUEB_PROCESSOR -c AUEB_PROCESSOR
Info (324025): Using vector source file "/home/niemand/altera/aueb_processor/Final_Test.vwf"
Warning (146050): Vector source file contains syntax error in  /home/niemand/altera/aueb_processor/Final_Test.vwf, line 3092, comment/time bar value cannot be set beyond simulation end time 280000 ps
Info (310003): Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info (310004): Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info (310002): Simulation partitioned into 1 sub-simulations
Info (328053): Simulation coverage is      34.67 %
Info (328052): Number of transitions in simulation is 848
Info (324045): Vector file AUEB_PROCESSOR.sim.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II 64-Bit Simulator was successful. 0 errors, 1 warning
    Info: Peak virtual memory: 682 megabytes
    Info: Processing ended: Tue Apr 12 20:38:45 2022
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:00


